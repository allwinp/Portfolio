{"version":3,"sources":["../../src/react-fluid-animation.js","../../src/fluid-animation.js","../../src/gl-program.js","../../src/get-gl-context.js","../../../src/shaders/index.js","logo.png","components/Navbar.js","homerstars.jpg","components/Homer.js","components/ContactForm.js","components/FluidAnimationTextStrings.js","lepetitprinceboyandfox.jpeg","components/LePetitPrinceAndFox.js","littlprince.jpeg","components/Littleprince.js","App.js","reportWebVitals.js","index.js"],"names":["ReactFluidAnimation","event","preventDefault","window","addEventListener","this","removeEventListener","raf","config","style","width","overflow","ref","_containerRef","_canvasRef","props","animationRef","canvas","Component","content","PropTypes","size","textureDownsample","densityDissipation","velocityDissipation","pressureDissipation","pressureIterations","splatRadius","e","_pointers","offsetY","offsetX","Math","touch","gl","drawElements","_splatStack","_initPrograms","splat","splats","count","_initFramebuffers","ext","_programs","GLProgram","shaders","supportLinearFiltering","divergence","pressure","gradientSubtract","createFBO","texture","createTexture","texParameteri","TEXTURE_2D","internalFormat","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_BUFFER_BIT","fbo2","texId","fbo1","texType","halfFloatTexType","rgba","formatRGBA","rg","formatRG","r","_density","_velocity","_divergence","_textureWidth","_textureHeight","createDoubleFBO","bufferData","ELEMENT_ARRAY_BUFFER","Uint16Array","STATIC_DRAW","vertexAttribPointer","enableVertexAttribArray","x","uniforms","dx","dy","color","y","undefined","_canvas","dt","iW","iH","viewport","advection","dissipation","pointer","vorticity","_config","pressureTexId","_pressure","i","display","compileShader","vertexShader","fragmentShader","createProgram","attachShader","linkProgram","uniformCount","getProgramParameter","supportRenderTextureFormat","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","CLAMP_TO_EDGE","params","alpha","depth","antialias","isWebGL2","getSupportedFormat","RGBA16F","formatR","R16F","RED","advectionManualFiltering","clear","curl","Navbar","class","className","href","src","PersonalLogo","alt","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Homer","HomerStars","ContactForm","strings","FluidAnimationStrings","position","zIndex","top","left","right","bottom","padding","flexDirection","justifyContent","alignItems","fontFamily","pointerEvents","fontSize","textShadow","speed","loop","Backspace","delay","length","LePetitPrinceBoyAndFox","BoyAndFoxImg","PrinceMoon","LittlePrince","defaultConfig","App","state","height","exact","path","_animationRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bef3ffa.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport raf from 'raf'\nimport sizeMe from 'react-sizeme'\n\nimport FluidAnimation, { defaultConfig } from './fluid-animation'\n\nclass ReactFluidAnimation extends Component {\n  static propTypes = {\n    content: PropTypes.string,\n    config: PropTypes.object,\n    style: PropTypes.object,\n    animationRef: PropTypes.func,\n    size: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    })\n  }\n\n  static defaultProps = {\n    config: defaultConfig,\n    style: { }\n  }\n\n  componentWillReceiveProps(props) {\n    this._onResize()\n\n    if (props.config) {\n      this._animation.config = {\n        ...props.config,\n        defaultConfig\n      }\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._onResize)\n    this._reset(this.props)\n    this._tick()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._onResize)\n    if (this._tickRaf) {\n      raf.cancel(this._tickRaf)\n      this._tickRaf = null\n    }\n  }\n\n  render() {\n    const {\n      content,\n      config,\n      animationRef,\n      style,\n      size,\n      ...rest\n    } = this.props\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          overflow: 'hidden',\n          ...style\n        }}\n        {...rest}\n        ref={this._containerRef}\n      >\n        <canvas\n          ref={this._canvasRef}\n          onMouseDown={this._onMouseDown}\n          onMouseMove={this._onMouseMove}\n          onMouseUp={this._onMouseUp}\n          onTouchStart={this._onTouchStart}\n          onTouchMove={this._onTouchMove}\n          onTouchEnd={this._onTouchEnd}\n          style={{\n            width: '100%',\n            height: '100%'\n          }}\n        />\n      </div>\n    )\n  }\n\n  _containerRef = (ref) => {\n    this._container = ref\n  }\n\n  _canvasRef = (ref) => {\n    this._canvas = ref\n  }\n\n  _onMouseDown = (event) => {\n    event.preventDefault()\n    this._animation.onMouseDown(event.nativeEvent)\n  }\n\n  _onMouseMove = (event) => {\n    event.preventDefault()\n    this._animation.onMouseMove(event.nativeEvent)\n  }\n\n  _onMouseUp = (event) => {\n    event.preventDefault()\n    this._animation.onMouseUp(event.nativeEvent)\n  }\n\n  _onTouchStart = (event) => {\n    this._animation.onTouchStart(event.nativeEvent)\n  }\n\n  _onTouchMove = (event) => {\n    this._animation.onTouchMove(event.nativeEvent)\n  }\n\n  _onTouchEnd = (event) => {\n    this._animation.onTouchEnd(event.nativeEvent)\n  }\n\n  _onResize = () => {\n    this._canvas.width = this._container.clientWidth\n    this._canvas.height = this._container.clientHeight\n\n    if (this._animation) {\n      this._animation.resize()\n    }\n  }\n\n  _tick = () => {\n    if (this._animation) {\n      this._animation.update()\n    }\n\n    this._tickRaf = raf(this._tick)\n  }\n\n  _reset(props) {\n    const {\n      animationRef,\n      content,\n      config\n    } = props\n\n    this._onResize()\n\n    this._animation = new FluidAnimation({\n      canvas: this._canvas,\n      content,\n      config\n    })\n\n    if (animationRef) {\n      animationRef(this._animation)\n      // this._animation.addRandomSplats(parseInt(Math.random() * 20) + 5)\n    }\n  }\n}\n\nexport default sizeMe({ monitorWidth: true, monitorHeight: true })(ReactFluidAnimation)\n","import GLProgram from './gl-program'\nimport getGLContext from './get-gl-context'\n\nimport shaders from './shaders'\n\nexport const defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005\n}\n\nclass Pointer {\n  constructor() {\n    this.id = -1\n    this.x = 0\n    this.y = 0\n    this.dx = 0\n    this.dy = 0\n    this.down = false\n    this.moved = false\n    this.color = [30, 0, 300]\n  }\n}\n\nexport default class FluidAnimation {\n  constructor(opts) {\n    const {\n      canvas,\n      config = {\n        ...defaultConfig,\n        ...opts.config\n      }\n    } = opts\n\n    this._canvas = canvas\n    this._config = config\n\n    this._pointers = [ new Pointer() ]\n    this._splatStack = []\n\n    const { gl, ext } = getGLContext(canvas)\n    this._gl = gl\n    this._ext = ext\n\n    this._initPrograms()\n    this._initBlit()\n    this.resize()\n\n    this._time = Date.now()\n    this._timer = 0\n  }\n\n  get config() {\n    return this._config\n  }\n\n  set config(config) {\n    this._config = config\n  }\n\n  get width() {\n    return this._canvas.width\n  }\n\n  get height() {\n    return this._canvas.height\n  }\n\n  addSplat(splat) {\n    this._splatStack.push([ splat ])\n  }\n\n  addSplats(splats) {\n    this._splatStack.push(Array.isArray(splats) ? splats : [ splats ])\n  }\n\n  addRandomSplats(count) {\n    const splats = []\n\n    for (let i = 0; i < count; ++i) {\n      splats.push(this._getRandomSplat())\n    }\n\n    this.addSplats(splats)\n  }\n\n  resize() {\n    const {\n      width,\n      height\n    } = this._canvas\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width\n      this._height = height\n\n      this._initFramebuffers()\n    }\n  }\n\n  onMouseMove = (e) => {\n    this._pointers[0].moved = this._pointers[0].down\n    this._pointers[0].dx = (e.offsetX - this._pointers[0].x) * 10.0\n    this._pointers[0].dy = (e.offsetY - this._pointers[0].y) * 10.0\n    this._pointers[0].x = e.offsetX\n    this._pointers[0].y = e.offsetY\n  }\n\n  onMouseDown = (e) => {\n    this._pointers[0].down = true\n    this._pointers[0].color = [\n      Math.random() + 0.2,\n      Math.random() + 0.2,\n      Math.random() + 0.2\n    ]\n  }\n\n  onMouseUp = (e) => {\n    this._pointers[0].down = false\n  }\n\n  onTouchStart = (e) => {\n    for (let i = 0; i < e.touches.length; ++i) {\n      this._pointers[i].down = true\n      this._pointers[i].color = [\n        Math.random() + 0.2,\n        Math.random() + 0.2,\n        Math.random() + 0.2\n      ]\n    }\n  }\n\n  onTouchMove = (e) => {\n    for (let i = 0; i < e.touches.length; ++i) {\n      const touch = e.touches[i]\n      this._pointers[i].moved = this._pointers[i].down\n      this._pointers[i].dx = (touch.clientX - this._pointers[i].x) * 10.0\n      this._pointers[i].dy = (touch.clientY - this._pointers[i].y) * 10.0\n      this._pointers[i].x = touch.clientX\n      this._pointers[i].y = touch.clientY\n    }\n  }\n\n  onTouchEnd = (e) => {\n    for (let i = 0; i < e.touches.length; ++i) {\n      this._pointers[i].down = false\n    }\n  }\n\n  _initPrograms() {\n    const gl = this._gl\n    const ext = this._ext\n\n    this._programs = { }\n    this._programs.clear = new GLProgram(gl, shaders.vert, shaders.clear)\n    this._programs.display = new GLProgram(gl, shaders.vert, shaders.display)\n    this._programs.splat = new GLProgram(gl, shaders.vert, shaders.splat)\n    this._programs.advection = new GLProgram(gl, shaders.vert, ext.supportLinearFiltering\n      ? shaders.advection\n      : shaders.advectionManualFiltering\n    )\n    this._programs.divergence = new GLProgram(gl, shaders.vert, shaders.divergence)\n    this._programs.curl = new GLProgram(gl, shaders.vert, shaders.curl)\n    this._programs.vorticity = new GLProgram(gl, shaders.vert, shaders.vorticity)\n    this._programs.pressure = new GLProgram(gl, shaders.vert, shaders.pressure)\n    this._programs.gradientSubtract = new GLProgram(gl, shaders.vert, shaders.gradientSubtract)\n  }\n\n  _initFramebuffers() {\n    const gl = this._gl\n    const ext = this._ext\n\n    function createFBO(texId, w, h, internalFormat, format, type, param) {\n      gl.activeTexture(gl.TEXTURE0 + texId)\n      const texture = gl.createTexture()\n      gl.bindTexture(gl.TEXTURE_2D, texture)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null)\n\n      const fbo = gl.createFramebuffer()\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0\n      )\n      gl.viewport(0, 0, w, h)\n      gl.clear(gl.COLOR_BUFFER_BIT)\n\n      return [texture, fbo, texId]\n    }\n\n    function createDoubleFBO(texId, w, h, internalFormat, format, type, param) {\n      let fbo1 = createFBO(texId, w, h, internalFormat, format, type, param)\n      let fbo2 = createFBO(texId + 1, w, h, internalFormat, format, type, param)\n\n      return {\n        get read() {\n          return fbo1\n        },\n        get write() {\n          return fbo2\n        },\n        swap() {\n          const temp = fbo1\n          fbo1 = fbo2\n          fbo2 = temp\n        }\n      }\n    }\n\n    this._textureWidth = gl.drawingBufferWidth >> this._config.textureDownsample\n    this._textureHeight = gl.drawingBufferHeight >> this._config.textureDownsample\n\n    const texType = ext.halfFloatTexType\n    const rgba = ext.formatRGBA\n    const rg = ext.formatRG\n    const r = ext.formatR\n\n    this._density = createDoubleFBO(\n      2,\n      this._textureWidth,\n      this._textureHeight,\n      rgba.internalFormat,\n      rgba.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    )\n\n    this._velocity = createDoubleFBO(\n      0,\n      this._textureWidth,\n      this._textureHeight,\n      rg.internalFormat,\n      rg.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    )\n\n    this._divergence = createFBO(\n      4,\n      this._textureWidth,\n      this._textureHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    )\n\n    this._curl = createFBO(\n      5,\n      this._textureWidth,\n      this._textureHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    )\n\n    this._pressure = createDoubleFBO(\n      6,\n      this._textureWidth,\n      this._textureHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    )\n  }\n\n  _initBlit() {\n    const gl = this._gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer())\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer())\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.STATIC_DRAW)\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(0)\n  }\n\n  _blit = (destination) => {\n    const gl = this._gl\n    gl.bindFramebuffer(gl.FRAMEBUFFER, destination)\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0)\n  }\n\n  _splat(x, y, dx, dy, color) {\n    const gl = this._gl\n\n    this._programs.splat.bind()\n    gl.uniform1i(this._programs.splat.uniforms.uTarget, this._velocity.read[2])\n    gl.uniform1f(this._programs.splat.uniforms.aspectRatio, this._canvas.width / this._canvas.height)\n    gl.uniform2f(this._programs.splat.uniforms.point, x / this._canvas.width, 1.0 - y / this._canvas.height)\n    gl.uniform3f(this._programs.splat.uniforms.color, dx, -dy, 1.0)\n    gl.uniform1f(this._programs.splat.uniforms.radius, this._config.splatRadius)\n    this._blit(this._velocity.write[1])\n    this._velocity.swap()\n\n    gl.uniform1i(this._programs.splat.uniforms.uTarget, this._density.read[2])\n    gl.uniform3f(this._programs.splat.uniforms.color, color[0] * 0.3, color[1] * 0.3, color[2] * 0.3)\n    this._blit(this._density.write[1])\n    this._density.swap()\n  }\n\n  _addSplat(splat) {\n    const { x, y, dx, dy, color } = splat\n\n    if (x === undefined) return\n    if (y === undefined) return\n    if (dx === undefined) return\n    if (dy === undefined) return\n    if (color === undefined) return\n\n    this._splat(x, y, dx, dy, color)\n  }\n\n  _addSplats(splats) {\n    for (const splat of splats) {\n      this._addSplat(splat)\n    }\n  }\n\n  _getRandomSplat() {\n    const color = [ Math.random() * 10, Math.random() * 10, Math.random() * 10 ]\n    const x = this._canvas.width * Math.random()\n    const y = this._canvas.height * Math.random()\n    const dx = 1000 * (Math.random() - 0.5)\n    const dy = 1000 * (Math.random() - 0.5)\n\n    return { x, y, dx, dy, color }\n  }\n\n  update() {\n    const gl = this._gl\n\n    const dt = Math.min((Date.now() - this._time) / 1000, 0.016)\n    this._time = Date.now()\n    this._timer += 0.0001\n\n    const w = this._textureWidth\n    const h = this._textureHeight\n    const iW = 1.0 / w\n    const iH = 1.0 / h\n\n    gl.viewport(0, 0, w, h)\n\n    if (this._splatStack.length > 0) {\n      this._addSplats(this._splatStack.pop())\n    }\n\n    this._programs.advection.bind()\n    gl.uniform2f(this._programs.advection.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.advection.uniforms.uVelocity, this._velocity.read[2])\n    gl.uniform1i(this._programs.advection.uniforms.uSource, this._velocity.read[2])\n    gl.uniform1f(this._programs.advection.uniforms.dt, dt)\n    gl.uniform1f(\n      this._programs.advection.uniforms.dissipation,\n      this._config.velocityDissipation\n    )\n    this._blit(this._velocity.write[1])\n    this._velocity.swap()\n\n    gl.uniform1i(this._programs.advection.uniforms.uVelocity, this._velocity.read[2])\n    gl.uniform1i(this._programs.advection.uniforms.uSource, this._density.read[2])\n    gl.uniform1f(\n      this._programs.advection.uniforms.dissipation,\n      this._config.densityDissipation\n    )\n    this._blit(this._density.write[1])\n    this._density.swap()\n\n    for (let i = 0; i < this._pointers.length; i++) {\n      const pointer = this._pointers[i]\n      if (pointer.moved) {\n        this._splat(pointer.x, pointer.y, pointer.dx, pointer.dy, pointer.color)\n        pointer.moved = false\n      }\n    }\n\n    this._programs.curl.bind()\n    gl.uniform2f(this._programs.curl.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.curl.uniforms.uVelocity, this._velocity.read[2])\n    this._blit(this._curl[1])\n\n    this._programs.vorticity.bind()\n    gl.uniform2f(this._programs.vorticity.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.vorticity.uniforms.uVelocity, this._velocity.read[2])\n    gl.uniform1i(this._programs.vorticity.uniforms.uCurl, this._curl[2])\n    gl.uniform1f(this._programs.vorticity.uniforms.curl, this._config.curl)\n    gl.uniform1f(this._programs.vorticity.uniforms.dt, dt)\n    this._blit(this._velocity.write[1])\n    this._velocity.swap()\n\n    this._programs.divergence.bind()\n    gl.uniform2f(this._programs.divergence.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.divergence.uniforms.uVelocity, this._velocity.read[2])\n    this._blit(this._divergence[1])\n\n    this._programs.clear.bind()\n    let pressureTexId = this._pressure.read[2]\n    gl.activeTexture(gl.TEXTURE0 + pressureTexId)\n    gl.bindTexture(gl.TEXTURE_2D, this._pressure.read[0])\n    gl.uniform1i(this._programs.clear.uniforms.uTexture, pressureTexId)\n    gl.uniform1f(this._programs.clear.uniforms.value, this._config.pressureDissipation)\n    this._blit(this._pressure.write[1])\n    this._pressure.swap()\n\n    this._programs.pressure.bind()\n    gl.uniform2f(this._programs.pressure.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.pressure.uniforms.uDivergence, this._divergence[2])\n    pressureTexId = this._pressure.read[2]\n    gl.uniform1i(this._programs.pressure.uniforms.uPressure, pressureTexId)\n    gl.activeTexture(gl.TEXTURE0 + pressureTexId)\n    for (let i = 0; i < this._config.pressureIterations; i++) {\n      gl.bindTexture(gl.TEXTURE_2D, this._pressure.read[0])\n      this._blit(this._pressure.write[1])\n      this._pressure.swap()\n    }\n\n    this._programs.gradientSubtract.bind()\n    gl.uniform2f(this._programs.gradientSubtract.uniforms.texelSize, iW, iH)\n    gl.uniform1i(this._programs.gradientSubtract.uniforms.uPressure, this._pressure.read[2])\n    gl.uniform1i(this._programs.gradientSubtract.uniforms.uVelocity, this._velocity.read[2])\n    this._blit(this._velocity.write[1])\n    this._velocity.swap()\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n    this._programs.display.bind()\n    gl.uniform1i(this._programs.display.uniforms.uTexture, this._density.read[2])\n    this._blit(null)\n  }\n}\n","function compileShader (gl, type, source) {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw gl.getShaderInfoLog(shader)\n  }\n\n  return shader\n}\n\nexport default class GLProgram {\n  constructor(gl, vertexSource, fragmentSource) {\n    const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexSource)\n    const fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSource)\n\n    this.uniforms = {}\n    this.program = gl.createProgram()\n    this.gl = gl\n\n    gl.attachShader(this.program, vertexShader)\n    gl.attachShader(this.program, fragmentShader)\n    gl.linkProgram(this.program)\n\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      throw gl.getProgramInfoLog(this.program)\n    }\n\n    const uniformCount = gl.getProgramParameter(\n      this.program,\n      gl.ACTIVE_UNIFORMS\n    )\n\n    for (let i = 0; i < uniformCount; i++) {\n      const uniformName = gl.getActiveUniform(this.program, i).name\n      this.uniforms[uniformName] = gl.getUniformLocation(\n        this.program,\n        uniformName\n      )\n    }\n  }\n\n  bind() {\n    this.gl.useProgram(this.program)\n  }\n}\n","export default function getWebGLContext (canvas) {\n  const params = {\n    alpha: false,\n    depth: false,\n    stencil: false,\n    antialias: false\n  }\n\n  let gl = canvas.getContext('webgl2', params)\n  const isWebGL2 = !!gl\n  if (!isWebGL2) {\n    gl =\n      canvas.getContext('webgl', params) ||\n      canvas.getContext('experimental-webgl', params)\n  }\n\n  let halfFloat\n  let supportLinearFiltering\n  if (isWebGL2) {\n    gl.getExtension('EXT_color_buffer_float')\n    supportLinearFiltering = gl.getExtension('OES_texture_float_linear')\n  } else {\n    halfFloat = gl.getExtension('OES_texture_half_float')\n    supportLinearFiltering = gl.getExtension('OES_texture_half_float_linear')\n  }\n\n  gl.clearColor(0.0, 0.0, 0.0, 1.0)\n\n  const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES\n  let formatRGBA\n  let formatRG\n  let formatR\n\n  if (isWebGL2) {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType)\n    formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType)\n    formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType)\n  } else {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n    formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n    formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n  }\n\n  return {\n    gl,\n    ext: {\n      formatRGBA,\n      formatRG,\n      formatR,\n      halfFloatTexType,\n      supportLinearFiltering\n    }\n  }\n}\n\nfunction getSupportedFormat (gl, internalFormat, format, type) {\n  if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n    switch (internalFormat) {\n      case gl.R16F:\n        return getSupportedFormat(gl, gl.RG16F, gl.RG, type)\n      case gl.RG16F:\n        return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type)\n      default:\n        return null\n    }\n  }\n\n  return {\n    internalFormat,\n    format\n  }\n}\n\nfunction supportRenderTextureFormat (gl, internalFormat, format, type) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null)\n\n  let fbo = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture,\n    0\n  )\n\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n  if (status !== gl.FRAMEBUFFER_COMPLETE) return false\n  return true\n}\n","import advectionManualFiltering from './advection-manual-filtering'\nimport advection from './advection'\nimport clear from './clear'\nimport curl from './curl'\nimport display from './display'\nimport divergence from './divergence'\nimport gradientSubtract from './gradient-subtract'\nimport pressure from './pressure'\nimport splat from './splat'\nimport vert from './vert'\nimport vorticity from './vorticity'\n\nexport default {\n  advectionManualFiltering,\n  advection,\n  clear,\n  curl,\n  display,\n  divergence,\n  gradientSubtract,\n  pressure,\n  splat,\n  vert,\n  vorticity\n}\n","export default __webpack_public_path__ + \"static/media/logo.8fc3c494.png\";","import React from 'react'\nimport PersonalLogo from '../logo.png'\n\nconst Navbar = () => {\n    return (\n        <nav class=\"navbar fixed-top navbar-expand-md navbar-light bg-transparent\">\n        <div className=\"container\">\n            <a className=\"navbar-brand mx-auto\" href=\"/\"><img className=\"PersonalLogo\" src={PersonalLogo} alt='Personal Logo.'></img></a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/#/about\">About Me</a>\n                </li>\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/#/projects\">Projects</a>\n                </li>\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/#/services\">Services</a>\n                </li>\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/#/contact\">Contact</a>\n                </li>\n            </ul>\n            </div>\n        </div>\n        </nav>\n    \n        \n    )\n}\n\nexport default Navbar","export default __webpack_public_path__ + \"static/media/homerstars.4b46b712.jpg\";","import React from 'react';\nimport HomerStars from '../homerstars.jpg';\n\nconst Homer = () => {\n    return (\n        <img className=\"homer\" src={HomerStars} alt=\"homer...\"></img>\n    )\n}\n\nexport default Homer\n","import React from \"react\";\n\nconst ContactForm = () => {\n    return (\n      <div className=\"contact\">hi</div>\n    );\n  };\n  \nexport default ContactForm;","import React from 'react';\nimport Typing from 'react-typing-animation';\n\nlet strings = ['Allwin Philip', 'React & Django', 'Beautifully Styled', 'Responsive UI']\n\nconst FluidAnimationStrings = () => {\n    return (\n        <div className=\"FluidAnimationText\"\n        style={{\n          position: 'absolute',\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          padding: '1em',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: '#3832e2',\n          fontFamily: 'Verdana, \"Helvetica Neue\", sans-serif',\n          pointerEvents: 'none'\n        }}\n        >\n        <h1\n          style={{\n            fontSize: '5em',\n            textShadow: '2px 2px 8px rgba(0, 0, 0, 0.5)',\n          }}\n        >\n          <Typing speed={10} loop=\"true\">\n            <span>{strings[0]}</span>\n            <Typing.Backspace delay={1000} count={strings[0].length + 1} />\n            <span>{strings[1]}</span>\n            <Typing.Backspace delay={1000} count={strings[1].length + 1} />\n            <span>{strings[2]}</span>\n            <Typing.Backspace delay={1000} count={strings[2].length + 1} />\n            <span>{strings[3]}</span>\n            <Typing.Backspace delay={1000} count={strings[3].length + 1} />\n          </Typing>\n        </h1>\n        </div>    )\n}\n\nexport default FluidAnimationStrings\n","export default __webpack_public_path__ + \"static/media/lepetitprinceboyandfox.9cccff66.jpeg\";","import React from 'react';\nimport BoyAndFoxImg from '../lepetitprinceboyandfox.jpeg';\n\nconst LePetitPrinceBoyAndFox = () => {\n    return (\n        <img className=\"homer\" src={BoyAndFoxImg} alt=\"homer...\"></img>\n    )\n}\n\nexport default LePetitPrinceBoyAndFox\n","export default __webpack_public_path__ + \"static/media/littlprince.44aec3fc.jpeg\";","import React from 'react';\nimport LittlePrince from '../littlprince.jpeg';\n\nconst PrinceMoon = () => {\n    return (\n        <img className=\"homer\" src={LittlePrince} alt=\"homer...\"></img>\n    )\n}\n\nexport default PrinceMoon\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport Homer from \"./components/Homer\";\nimport ContactForm from \"./components/ContactForm\";\nimport FluidAnimation from \"./components/react-fluid-animation\";\nimport FluidAnimationStrings from \"./components/FluidAnimationTextStrings\";\nimport LePetitPrinceBoyAndFox from \"./components/LePetitPrinceAndFox\";\nimport PrinceMoon from \"./components/Littleprince\";\n\nvar defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005,\n};\n\nexport default class App extends Component {\n  state = {\n    config: {\n      ...defaultConfig,\n    },\n  };\n\n  render() {\n\n    const { config } = this.state;\n\n    return (\n      <Switch>\n        <div\n          style={{\n            height: \"100vh\",\n          }}\n        >\n          <Navbar />\n          <Route exact path=\"/\">\n            <FluidAnimation\n              config={config}\n              animationRef={this._animationRef}\n            />\n            <FluidAnimationStrings />\n          </Route>\n          <Route exact path=\"/about\">\n            <Homer />\n          </Route>\n          <Route exact path=\"/projects\">\n            <LePetitPrinceBoyAndFox />\n          </Route>\n          <Route exact path=\"/services\">\n            <PrinceMoon />\n          </Route>\n          <Route exact path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route exact path=\"/homer\">\n            <Homer />\n          </Route>\n        </div>\n      </Switch>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}